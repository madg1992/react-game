{"version":3,"sources":["components/Header/Header.js","components/Jumbotron/Jumbotron.js","components/Card/Card.js","components/Wrapper/Wrapper.js","App.js","index.js"],"names":["Header","props","className","currentScore","topScore","Jumbotron","href","src","alt","border","Card","image","id","class","onClick","checkIfClicked","Wrapper","children","App","state","cards","bind","clickedCard","this","filter","card","cardsCopy","slice","sort","a","b","Math","random","clicked","resetCardsCopy","map","setState","findIndex","key","Component","ReactDOM","render","document","getElementById"],"mappings":"ssCAceA,G,MAXA,SAAAC,GAAK,OAEhB,yBAAKC,UAAU,kBAEX,yBAAKA,UAAU,oEACX,wBAAIA,UAAU,cAAd,uBAAgDD,EAAME,aAAtD,kBAAmFF,EAAMG,cCMtFC,G,MAXG,kBACd,yBAAKH,UAAU,kBACX,yBAAKA,UAAU,oCACX,wBAAIA,UAAU,aAAd,0BACA,uBAAGI,KAAK,+BAA8B,yBAAKC,IAAI,6EAA6EC,IAAI,eAAeC,OAAO,OACtJ,6BACA,wBAAIP,UAAU,QAAd,kDCOGQ,G,MAbF,SAAAT,GAAK,OACd,yBAAKC,UAAU,QACX,yBAAKA,UAAU,iBACX,yBACIK,IAAKN,EAAMU,MACXH,IAAKP,EAAMW,GACXC,MAAM,yBACNC,QAAS,kBAAMb,EAAMc,eAAed,EAAMW,WCH3CI,G,MAJC,SAAAf,GAAK,OACjB,yBAAKC,UAAU,qBAAqBD,EAAMgB,Y,OC8D/BC,E,YA1Db,WAAYjB,GAAQ,IAAD,8BACjB,4CAAMA,KACDkB,MAAQ,CACXC,MAAOA,EACPhB,SAAU,EACVD,aAAc,GAEhB,EAAKY,eAAiB,EAAKA,eAAeM,KAApB,gBAPL,E,4EAUJT,GACb,IAAIU,EAAcC,KAAKJ,MAAMC,MAAMI,QAAO,SAAAC,GAAI,OAAIA,EAAKb,KAAOA,KAAI,GAC9Dc,EAAYH,KAAKJ,MAAMC,MAAMO,QAAQC,MAAK,SAAUC,EAAGC,GAAK,MAAO,GAAMC,KAAKC,YAClF,GAAKV,EAAYW,QAUZ,CAEH,IAAIC,EAAiBR,EAAUS,KAAI,SAACV,GAClC,MAAO,CACLb,GAAIa,EAAKb,GACTD,MAAOc,EAAKd,MACZsB,SAAS,MAGbV,KAAKa,SAAS,CACZhB,MAAOc,EACP/B,aAAc,SApBhBmB,EAAYW,SAAU,EACtBP,EAAUA,EAAUW,WAAU,SAACZ,GAAD,OAAUA,EAAKb,KAAOA,MAAOU,EAE3DC,KAAKa,SAAS,CACZhB,MAAOM,EACPvB,aAAcoB,KAAKJ,MAAMhB,aAAe,EACxCC,SAAWmB,KAAKJ,MAAMhB,aAAe,EAAIoB,KAAKJ,MAAMf,SAAWmB,KAAKJ,MAAMhB,aAAe,EAAIoB,KAAKJ,MAAMf,a,+BAkBpG,IAAD,OACP,OACE,yBAAKF,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQC,aAAcoB,KAAKJ,MAAMhB,aAAcC,SAAUmB,KAAKJ,MAAMf,WACpE,kBAAC,EAAD,KACGmB,KAAKJ,MAAMC,MAAMe,KAAI,SAAAV,GAAI,OACxB,kBAAC,EAAD,CACEV,eAAgB,EAAKA,eACrBH,GAAIa,EAAKb,GACT0B,IAAKb,EAAKb,GACVD,MAAOc,EAAKd,iB,GAlDR4B,aCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0aec19e2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = props => (\n\n    <div className=\"main-container\">\n\n        <nav className=\"navbar sticky-top navbar-light bg-warning justify-content-center\">\n            <h2 className=\"text-muted\">Current game score: {props.currentScore} || Top score: {props.topScore}</h2>\n        </nav>\n\n    </div>\n);\n\nexport default Header;","import React from \"react\";\nimport \"./Jumbotron.css\"\n\nconst Jumbotron = () => (\n    <div className=\"main-container\">\n        <div className=\"jumbotron justify-content-center\">\n            <h1 className=\"display-3\">React Memory Card Game</h1>\n            <a href=\"https://github.com/madg1992\"><img src=\"https://fontmeme.com/permalink/200301/9656a3d3143f8da1b8ed6ed164273594.png\" alt=\"pokemon-font\" border=\"0\" /></a>\n            <br />\n            <h2 className=\"lead\">Directions: Click on each photo only once!</h2>\n        </div>\n    </div>\n);\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = props => (\n    <div className=\"card\">\n        <div className=\"img-container\">\n            <img\n                src={props.image}\n                alt={props.id}\n                class=\"card-img-top img-fluid\"\n                onClick={() => props.checkIfClicked(props.id)}\n            />\n        </div>\n    </div>\n);\n\nexport default Card;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => (\n    <div className=\"container wrapper\">{props.children}</div>\n);\n\nexport default Wrapper;","import React, { Component } from 'react';\nimport Header from \"./components/Header\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: cards,\n      topScore: 0,\n      currentScore: 0,\n    };\n    this.checkIfClicked = this.checkIfClicked.bind(this);\n  }\n\n  checkIfClicked(id) {\n    let clickedCard = this.state.cards.filter(card => card.id === id)[0];\n    let cardsCopy = this.state.cards.slice().sort(function (a, b) { return 0.5 - Math.random() });\n    if (!clickedCard.clicked) {\n      clickedCard.clicked = true;\n      cardsCopy[cardsCopy.findIndex((card) => card.id === id)] = clickedCard;\n\n      this.setState({\n        cards: cardsCopy,\n        currentScore: this.state.currentScore + 1,\n        topScore: (this.state.currentScore + 1 > this.state.topScore ? this.state.currentScore + 1 : this.state.topScore),\n      });\n    }\n    else {\n\n      let resetCardsCopy = cardsCopy.map((card) => {\n        return {\n          id: card.id,\n          image: card.image,\n          clicked: false,\n        }\n      });\n      this.setState({\n        cards: resetCardsCopy,\n        currentScore: 0,\n      });\n    }\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <Jumbotron />\n        <Header currentScore={this.state.currentScore} topScore={this.state.topScore} />\n        <Wrapper>\n          {this.state.cards.map(card => (\n            <Card\n              checkIfClicked={this.checkIfClicked}\n              id={card.id}\n              key={card.id}\n              image={card.image}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}